name: Convert PyTorch Model to ONNX and Upload to HF, then Run on Kaggle

on:
  push:
    branches:
      - main  # Chạy workflow khi có push lên nhánh `main`

jobs:
  convert-model:
    runs-on: ubuntu-latest

    env:
      HF_DATASET_REPO: nhotin/segment-text  # Repo dataset trên Hugging Face
      MODEL_NAME: sat-12l-sm  # Tên model

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install dependencies
        run: |
          pip install -U pip
          pip install -r requirements.txt
          pip install torch onnx onnxruntime transformers huggingface_hub numpy

      - name: Convert PyTorch to ONNX
        run: |
          python convert/export_to_onnx_sat.py \
            --model_name_or_path segment-any-text/${{ env.MODEL_NAME }} \
            --output_dir models/${{ env.MODEL_NAME }} \
            --device cpu

      - name: Upload ONNX model to Hugging Face Dataset
        env:
          HF_TOKEN: ${{ secrets.HF_TOKEN }}  # Token Hugging Face
        run: |
          pip install huggingface_hub

          echo "Đăng nhập vào Hugging Face Hub..."
          huggingface-cli login --token $HF_TOKEN
          
          echo "Kiểm tra và tạo dataset nếu chưa có..."
          python -c "from huggingface_hub import HfApi; HfApi().create_repo('${{ env.HF_DATASET_REPO }}', repo_type='dataset', exist_ok=True)"

          echo "Đẩy model lên Hugging Face Dataset..."
          huggingface-cli upload \
            "${{ env.HF_DATASET_REPO }}" \
            "models/${{ env.MODEL_NAME }}/model.onnx" \
            --repo-type dataset \
            --token $HF_TOKEN

          echo "Model đã được upload thành công lên Dataset: https://huggingface.co/datasets/${{ env.HF_DATASET_REPO }}"

      - name: Setup Kaggle API
        env:
          KAGGLE_USERNAME: ${{ secrets.KAGGLE_USERNAME }}
          KAGGLE_KEY: ${{ secrets.KAGGLE_KEY }}
        run: |
          mkdir -p ~/.kaggle
          echo "{\"username\":\"$KAGGLE_USERNAME\",\"key\":\"$KAGGLE_KEY\"}" > ~/.kaggle/kaggle.json
          chmod 600 ~/.kaggle/kaggle.json
          echo "Kaggle API đã được cấu hình thành công!"

      - name: Install Kaggle CLI
        run: pip install kaggle

      - name: Verify Kaggle Notebook Files
        run: |
          ls -lah convert/
          cat convert/kernel-metadata.json

      - name: Push Kaggle Notebook
        run: kaggle kernels push -p convert

      - name: Run Kaggle Notebook with GPU T4
        run: kaggle kernels start --kernel your_kaggle_username/convert-onnx-to-trt
